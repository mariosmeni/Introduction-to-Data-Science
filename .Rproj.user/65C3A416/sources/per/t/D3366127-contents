---
title: "Coursework - 2021"
output:
  html_document:
    df_print: paged
  pdf_document: default
editor_options:
  chunk_output_type: inline
---

```{r,error=TRUE}

library("janitor")
library("here")
library("tidyverse")
library("lubridate")
library("ggrepel")
library("gapminder")
library("RColorBrewer")
library("readxl")


```





#Question 1a
```{r,error=TRUE}


read_lines(file = here("data","nasa_global_temperature.txt"), n_max = 8L )       #read the first 8 lines of txt


df <- read_table(here("data","nasa_global_temperature.txt"), skip = 3,)          #import data and skip the first 3 lines
df


nasa_temp <- df%>%                                     #save the name of the tibble
  select(c("Year", "No_Smoothing")) %>%                #select the two columns
  rename(date = Year) %>%                              #rename year as date
  rename(temp = No_Smoothing)%>%                       #rename No_smoothing as temp
  mutate(date = parse_date(date, format = "%Y")) %>%   #create a new column, turn "date" into date and shows only the year
  remove_empty()                                       #remove columns and rows that has NAs 


ggplot() +                                             #create a plot
  layer (
    data = nasa_temp,                                  #use the data from nasa_temp
    geom = "line",                                     #the type of plot is line graph
    mapping = aes(x = date, y = temp),                 #specifies the data that we use in each axes
    stat = "identity",                                 #no further transformation
    position = "identity"                              #position adjustment
  )

```



#Question 1b
```{r,error=TRUE}


read_lines(file = here("data","nasa_arctic_sea_ice.csv"), n_max = 5L )           #read the first 5 lines of csv


df1 <- read_csv2(here("data","nasa_arctic_sea_ice.csv"))                         #import the data 
df1


nasa_ice <- df1 %>%                                   #save the name of the tibble
  select(c(year, extent)) %>%                         #select the two columns
  rename(date = year) %>%                             #rename year as date
  rename(ice = extent) %>%                            #rename the extent as ice
  mutate(date = as.character(date)) %>%               #create a new column, turn "date" into character
  mutate(date = parse_date(date, format = "%Y")) %>%  #turn "date" into date
  remove_empty()                                      #remove columns and rows that has NAs 


ggplot() +                                            #create a plot
  layer (      
    data = nasa_ice,                                  #use the data from nasa_ice
    geom = "line",                                    #the type of plot is line graph
    mapping = aes(x = date, y = ice),                 #specifies the data that we use in each axes                 
    stat = "identity",                                #no further transformation
    position = "identity"                             #position adjustment
  )


```



#Question 1c
```{r, error=TRUE}


read_lines(file = here("data","nasa_sea_level.csv"), n_max = 15)                  #read the first 15 lines of csv


df2 <- read_table(here("data","nasa_sea_level.csv"), skip = 48,col_names = FALSE)  #import the data with new column names and skip the first 48 lines
df2


glimpse(df2)                                         #rotate the table

nasa_sea <- df2 %>%                                  #save the name of the tibble
  rename(date = X3) %>%                              #rename X13 as date
  rename(sea = X12) %>%                              #rename X12 as sea
  select(c(date,sea)) %>%                            #select columns sea and date

  mutate(date = date_decimal(date, tz = "UTC")) %>%  #create a column and convert a decimal to date 
  mutate(date = date(date))                          #turn date as date
  

ggplot() +                                       #create a plot
  layer (
    data = nasa_sea,                             #use the data from nasa_sea
    geom = "line",                               #the type of plot is line graph
    mapping = aes(x = date, y = sea),            #specifies the data that we use in each axes
    stat = "identity",                           #no further transformation
    position = "identity"                        #position adjustment
  )


```




#Question 1d
```{r, error=TRUE}

read_lines(file = here("data","nasa_carbon_dioxide.txt"), n_max = 200L )          #read the first 15 lines of csv


dfd <- read_table(here("data","nasa_carbon_dioxide.txt"), skip = 53, col_names = FALSE)  #import the data with new column names, skip the first 53 lines and save it with the name dfd
dfd


nasa_co2 <- dfd %>%                     #save the name of the tibble
  unite(df3, X1,X2, sep = " ")%>%       #unite the columns X1 and X2 with a new name df3
  rename(date = df3)%>%                 #rename df3 as date
  rename(co2 = X4) %>%                  #rename X4 as co2
  select(c(date,co2))%>%                #select the columns date and co2
  mutate(date = parse_date(date, format = "%Y %m"))   #create a new column and turn date as date with format year and month


ggplot() +                                             #create a plot
  layer (
    data = nasa_co2,                                   #use the data from nasa_co2
    geom = "point",
    mapping = aes(x = date, y = co2, colour = date),   #specifies the data that we use in each axis
    stat = "identity",                                 #no further transformation
    position = "identity"                              #position adjustment
  ) + scale_y_continuous(limits = c(300,400))          #numbered axis Y from 300 to 400
    

  


```




#Question 1e
```{r, error=TRUE}

nasa <- nasa_temp %>%      #save the name of the tibble
  full_join(               #merge the data sets along rows
    nasa_ice,              #the tibble we want to combine
    by = "date",           #combine based the date
    keep = FALSE) %>%      #don't preserved the keys from x and y in the output
  full_join(              
    nasa_sea,
    by = "date",
    keep = FALSE) %>%
  full_join(
    nasa_co2,
    by = "date",
    keep = FALSE) 
  nasa

```



#Question 1f
```{r, error=TRUE}

nasa %>%                                                        #name the nasa tibble df_temp
  filter(date >= "1960-01-01" & year <= "2020-01-01") %>%       #select the years from 1960 - 2020
  ggplot(mapping = aes(y = co2, x = temp)) +                    #define the axes
  geom_point(mapping = aes(colour = date))                      #add colour by year
df_temp


```




#Question 2a
```{r, error=TRUE}


read_lines(file = here("data","luthi_carbon_dioxide.txt"), n_max = 800L )        #read the first 800 lines


df21 <- read_table(here("data","luthi_carbon_dioxide.txt"), skip = 773)          #import the data, skip the first 773 lines and save it with the name df21
df21

historic_co2 <- df21 %>%      #save the tibble with the name historic_co2 
  select(c(1,2))%>%           #select the first and the second columns
  rename(yrbp = 1) %>%        #rename column 1 as yrbp
  rename(co2 = 2)             #rename column 2 as co2
  
```




#Question 2b
```{r, error=TRUE}

historic_co2_new <- historic_co2 %>%   #save the tibble with the name historic_co2_new 
  select(c(1,2))%>%                    #select the first 2 columns
  rename(yrbp = 1) %>%                 #rename column 1 as co2
  rename(co2 = 2) %>%                  #rename column 2 as co2
  mutate(yrbp = yrbp + 13)             #create a new column named yrbp and add 13


nasa_co2_new <- nasa_co2 %>%                            #save the tibble with the name nasa_co2_new 
  mutate(date = format(date, format = "%Y")) %>%        #create a column date that shows only the year
  group_by(date)%>%                                     #group data by date
  summarise(co2 = mean(co2))%>%                         #summarise the mean of co2
  mutate(yrbp = 2021 - as.integer(date)) %>%            #create column with the name yrbp 
  select(c(yrbp,co2))
  



a <- bind_rows(nasa_co2_new, historic_co2_new)     #bind the rows of the two tibble
a



    ```




  
#Question 2c
```{r, error=TRUE}

df2c <- read_csv(here("data_cleaned","combined_co2.csv"))       #import the data
df2c


 m  <- ggplot() +  geom_line(       #create a line plot
            data = df2c,            #use the data df2c
            size = 1,               #size of the line
            mapping = aes(x = yrbp, y = co2),     #define the axes
            stat = "identity",                    #no further transformation
            position = "identity") + theme_classic() +  #position adjustment
            labs (
                   x = "Years before present",    #name the axis X
                   y = "Carbon dioxide [ppm]") +  #name the axis Y
            scale_x_continuous(trans = "reverse",limits = c(800000,0), labels = scales::comma) #reverse the plot and use limits starting from 800000 to 0.
            


 
m_point <-  annotate(
            geom = "point",   #create a point
            colour = "red",   #the colour is red
            shape = 21,       
            size = 1.5,
            stroke = 1.3)     #size and shape of the point
 
 
 
m_curve <- annotate( geom ="curve",   #uses a curve
               x = 100000, 
               y = 371.3192,         #the position of the text
               xend = 0,             #where the arrow points
               yend = 415.6983 +1 ,  #where the arrow starts
               curvature = - 0.5,    #how much curve is the line of arrow
               arrow = arrow(type = "closed", length = unit(2.5, "mm")), #type and length of arrow
               alpha = 0.8,                  
               colour = "red")        #the colour of the arrow
 
 
m_text <- annotate("text",      
              x = 220000, 
              y = 360.3075, 
              label = "2021 average: \n 417 ppm", #write a text name
              hjust = 0.10, vjust = -0.1,    
              lineheight = 0.8,
              colour = "red")        #the colour of the text
            

m + m_point + m_curve + m_text


```




#Question 3a
```{r, error=TRUE}

df3a <- read_xlsx(here("data","nsidc_sea_ice_daily_extent.xlsx"))   #import the data
df3a


sea_ice_1 <- df3a %>%       #save the tibble with the name sea+ice_
  fill(...1) %>%            #fill values
  select(names(df3a[1:46])) %>%   #select columns from 1 to 46
  pivot_longer(             
    cols = names(df3a)[3:46],  
    names_to = c("year")) %>% #make the data set longer and collapse it into new column value 
  rename(month = ...1, day = ...2,  extent = value)%>% #rename columns
  mutate(year = as.integer(year)) %>% #convert year as integer
  mutate(day = as.integer(day)) %>%   #convert day as integer
  mutate(month = match(month, month.name)) #convert month as a number

sea_ice_1

```



#Question 3b
```{r, error=TRUE}

baseline_1979 <- sea_ice_1 %>%   #save tibble in baseline_1979
  filter(year == 1979) %>%       #choose the year 1979
  group_by(month) %>%            #group by month
  summarise(baseline_mean = mean(extent, na.rm=TRUE))  #summarise the mean of baseline and remove missing values

baseline_1979



sea_ice_2 <- sea_ice_1 %>%    #save tibble in sea_ice_2
  group_by(year, month) %>%   #group by year and month
  summarise(mmean = mean(extent, na.rm=TRUE))%>%   #summarise the mean of extent and remove missing value
  full_join(baseline_1979) %>%    #merge the data setw of baseline_1979
  mutate(proportion_baseline_extent = mmean / baseline_mean)%>%      #create a column with the averages 
  select(c(year, month, proportion_baseline_extent))   #select this columns

sea_ice_2


```





#Question 3c
```{r, error=TRUE}

sea_ice_plot <- sea_ice_2 %>%     #save the tibble with the name sea_ice_plot
  filter(year != 1978 & year != 2021) %>% #pick rows with of all values except 1978 and 2021
  mutate(Month = month.name[month]) #convert month to a number

p <- ggplot(sea_ice_plot, mapping = aes(x = year, y = Month)) #create a plot and define the axis



p +scale_y_discrete(limits = month.name)+    #sort axes y by month
  
  labs(
  title = "Sea ice (northern hemisphere)"   #add title
  ) +
  geom_tile(aes(fill = proportion_baseline_extent)) +  #build the shape
  theme(
    plot.title = element_text( 
      hjust = 0.5)  #align the title
    ) +
  theme_minimal() + #no background annotations
  theme_classic() + scale_fill_distiller(palette = "RdPu", name = "Proportion of 1979 extent") + scale_x_continuous(expand = c(0, 0)) #use the colour and remove the blank space 



```





#Question 4a
```{r, error=TRUE}

stop_search_1 <- read_csv(file = here("data","stop_and_search.csv"))   #import the data        
stop_search_1

stop_search_1 %>% 
  rename(stops = "Number of stop and searches") %>%       #rename the column to stops
  rename(year = Time) %>%                                 #rename the column to year
  rename(population = "Population by ethnicity") %>%      #rename the column to population
  rename(rate = "Rate per 1,000 population by ethnicity")%>%    #rename the column to rate
  select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>% #select the columns
	filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>% #select the rows with the ethicities in the brakets
  mutate(stops = as.double(stops)) %>%             #convert stops as double
  mutate(population = as.double(population)) %>%   #convert population as double
  mutate(rate = as.double(rate))                   #convert rate as double           


```




#  Question 4c
## First Question

How many stops have been made over the years to each ethnicity across UK?
Operationalisation -> We compare the number of stops of all ethnicities using the geography and based on the years we have on the data.

```{r, error=TRUE}

d1 <- read_csv(file = here("data_cleaned","stop_search_2.csv")) 

q13 <- d1 %>%                                           #save the tibble to the name q13
  select(c(ethnicity, stops, year, geography)) %>%      #select the columns
  filter(geography =="All - including BTP") %>%         #select the rows which include "All - including BTP"
  mutate(year = substr(year, 1, 4))%>%                  #show only 4 numbers of year
  group_by(ethnicity)                                   #group by ethnicity
  

pi <- ggplot(q13, mapping = aes(x = factor(year), y = stops))  #create a plot and define axes
pi + geom_point(mapping = aes(colour = ethnicity)) +           #create a plot with points and with colour
  labs(title = "Stops and Search in Ethnicities in the UK",    #add title and name axes
       x = "Years", y = "Stops")+
  scale_y_continuous(limits = c(0, 1500000), labels = scales::comma)  #put limis and change the type that it shows



```



#  Question 4c
## Second Question

Are the stops by the British transport police more common in London than elsewhere in the UK? 
Operationalisation -> We compare the number of stops in London with the number of stops anywhere else in the UK

```{r}

d1 <- read_csv(file = here("data_cleaned","stop_search_2.csv")) 

q23 <- d1 %>%                                 #save the tibble with tha name g23
  select(c(stops, year, geography)) %>%       #select the columns
  filter(geography =="London, City of") %>%   #select the rows which include "London, City of"
  mutate(year = substr(year, 1, 4))%>%        #show only 4 numbers of year
  group_by(geography =="London, City of")     #group by geography =="London, City of"
  

pa <- ggplot(q23, mapping = aes(x = factor(year), y = stops))    #create a plot and define axes
pa + geom_line(mapping = aes(colour = geography), size = 5) +    #map with color and increase the size
  labs(title = "Stops and Search in London",                     #add title and name the axes
       x = "Years", y = "Stops")


```




#  Question 4c
## Third Question

Over the last decade, have the stops of black people been increased more than the white people?
Operationalisation -> We compare the number of stops of black and white people in the last 10 years.

```{r}

d1 <- read_csv(file = here("data_cleaned","stop_search_2.csv")) 



q33 <- d1 %>%                                      #save the tibble with tha name g23
  select(c(stops, year, ethnicity)) %>%            #select the columns
  filter(ethnicity == c("White", "Black"))%>%      #select the rows which include White and Black
  mutate(year = substr(year, 1, 4))%>%             #show only 4 numbers of year
  filter(year >= "2009" & year<= "2019") %>%       #select only the years from 2009 - 2019
  group_by(ethnicity == c("White", "Black"))       #group by ethnicity

 
  
  

po <- ggplot(q33, mapping = aes(x = factor(year), y = stops))              #create a plot and define axes
po + geom_point(mapping = aes(colour= ethnicity))  +                       #map with color
  labs(title = "Stops of White and Black people over the past 10 years",   #add title and name the axes
       x = "Years", y = "Stops") +
   scale_y_continuous(limits = c(0, 1500000), labels = scales::comma)      #put limis and change the type that it shows



```



#Question 4d

## 1st Answer
As the figure shows, the number of stops and search decreased until 2017 and then it started to increase again in all ethnicities.

## 2st Answer
As the figure shows, the number of stops and searches dramatically decrease from 2007 until 2017 whereas there is a small increase in years 2018 and 2019.


# 3rd Answer
The stops and search of white people seems to be dropped down in oppose to black people which seems to slighly decreased.


 




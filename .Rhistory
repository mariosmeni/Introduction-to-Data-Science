df3aa <- read_xlsx(file = here("data_cleaned","sea_ice_1.xlsx"))
df3aa <- read_csv(file = here("data_cleaned","sea_ice_1.csv"))
df3aa
sea_ice_1 <- df3a %>%
fill(...1) %>%
select(names(df3a[1:46])) %>%
pivot_longer(
cols = names(df3a)[3:46],
names_to = c("year")) %>%
rename(month = ...1, day = ...2,  extent = value)%>%
mutate(year = as.integer(year)) %>%
mutate(day = as.integer(day)) %>%
mutate(month = match(month, month.name))
#%>%  #drop_na()
sea_ice_1
baseline_1979 <- sea_ice_1 %>%
filter(year == 1979) %>%
group_by(month) %>%
summarise(baseline_mean = mean(extent, na.rm=TRUE))
baseline_1979
sea_ice_2 <- sea_ice_1 %>%
group_by(year, month) %>%
summarise(mmean = mean(extent, na.rm=TRUE))%>%
full_join(baseline_1979) %>%
mutate(proportion_baseline_extent = mmean / baseline_mean)%>%
select(c(year, month, proportion_baseline_extent))
sea_ice_2
df3aa <- read_csv(file = here("data_cleaned","sea_ice_2.csv"))
df3aa
df3aa <- read_csv(file = here("data_cleaned","sea_ice_2.csv"))
df3aa
baseline_1979 <- sea_ice_1 %>%
filter(year == 1979) %>%
group_by(month) %>%
summarise(baseline_mean = mean(extent, na.rm=TRUE))
baseline_1979
sea_ice_2 <- sea_ice_1 %>%
group_by(year, month) %>%
summarise(mmean = mean(extent, na.rm=TRUE))%>%
full_join(baseline_1979) %>%
mutate(proportion_baseline_extent = mmean / baseline_mean)%>%
select(c(year, month, proportion_baseline_extent))
sea_ice_2
sea_ice_plot <- sea_ice_2 %>%
filter(year != 1978 & year != 2021) %>%
mutate(Month = month.name[month])
p <- ggplot(sea_ice_plot, mapping = aes(x = year, y = Month))
p +scale_y_discrete(limits = month.name)+
labs(
title = "Sea ice (northern hemisphere)"
) +
geom_tile(aes(fill = proportion_baseline_extent)) +
theme(
plot.title = element_text(
hjust = 0.5)
) +
theme_minimal() +
theme_classic() + scale_fill_distiller(palette = "RdPu", name = "Proportion of 1979 extent") + scale_x_continuous(expand = c(0, 0))
d1 <- read_csv(file = here("data_cleaned","stop_search_2.csv"))
d1
d1 %>%
separate(year,sep = "/",into = c("Year","else")) %>%
select(c("Year", "legislation_type","stops")) %>%
group_by(Year)
d1 %>%
separate(year,sep = "/",into = c("Year","else")) %>%
select(c("Year", "legislation_type","stops")) %>%
group_by(Year) %>%
select(c("Year", "legislation_type","stops")) %>%
filter(legislation_type == "All") %>%
summarise(Stops = sum(stops))
ggplot() +  geom_line(
data = df2c,
size = 1,
mapping = aes(x = Years, y = Stops),
stat = "identity",
position = "identity") + theme_classic())
ggplot() +  geom_line(
data = df2c,
size = 1,
mapping = aes(x = Years, y = Stops),
stat = "identity",
position = "identity") + theme_classic()
ggplot() +  geom_line(
data = df2c,
size = 1,
mapping = aes(x = Year, y = Stops),
stat = "identity",
position = "identity") + theme_classic()
d1 %>%
separate(year,sep = "/",into = c("Year","else")) %>%
select(c("Year", "legislation_type","stops")) %>%
group_by(Year) %>%
select(c("Year", "legislation_type","stops")) %>%
filter(legislation_type == "All") %>%
summarise(Stops = sum(stops))
ggplot() +  geom_line(
data = df1,
size = 1,
mapping = aes(x = Year, y = Stops),
stat = "identity",
position = "identity") + theme_classic()
ggplot() +  layer(
data = df1,
mapping = aes(x = Year, y = Stops),
stat = "identity",
position = "identity") + theme_classic()
ggplot() +                                             #create a plot
layer (
data = df1,                                   #use the data from nasa_co2
geom = "bar",
mapping = aes(x = Year, y = Stops, colour = date),   #specifies the data that we use in each axis
stat = "identity",                                 #no further transformation
position = "identity"                              #position adjustment
) + scale_y_continuous())
ggplot() +                                             #create a plot
layer (
data = df1,                                   #use the data from nasa_co2
geom = "bar",
mapping = aes(x = Year, y = Stops, colour = date),   #specifies the data that we use in each axis
stat = "identity",                                 #no further transformation
position = "identity"                              #position adjustment
)
d1 %>%
separate(year,sep = "/",into = c("Year","else")) %>%
select(c("Year", "legislation_type","stops")) %>%
group_by(Year) %>%
select(c("Year", "legislation_type","stops")) %>%
filter(legislation_type == "All") %>%
summarise(Stops = sum(stops))
ggplot() +                                             #create a plot
layer (
data = df1,                                   #use the data from nasa_co2
geom = "bar",
mapping = aes(x = Year, y = Stops, colour = date),   #specifies the data that we use in each axis
stat = "identity",                                 #no further transformation
position = "identity"                              #position adjustment
ggplot() +                                             #create a plot
stop_search_1 <- read_csv(file = here("data","stop_and_search.csv"))
stop_search_1
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(year,Ethnicity,Legislation_type,Geography,stops,population,rate)
stop_search_1 <- read_csv(file = here("data","stop_and_search.csv"))
stop_search_1
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(year,Ethnicity,Legislation_type,Geography,stops,population,rate) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" ))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops)) %>%
mutate(population = as.double(population)) %>%
mutate(rate = as.double(rate))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" ))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops)) %>%
mutate(population = as.double(population))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops)) %>%
mutate(population = as.double(population)) %>%
mutate(rate = as.double(rate))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops)) %>%
mutate(population = as.double(population))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" ))
stop_search_1
nasa <- nasa_temp %>%      #save the name of the tibble
full_join(               #merge the data sets along rows
nasa_ice,
by = "date",
keep = FALSE) %>%
full_join(                #save the name of the tibble
nasa_sea,
by = "date",
keep = FALSE) %>%
full_join(
nasa_co2,
by = "date",
keep = FALSE)
nasa
nasa
?full_join
nasa_ice
stop_search_1 <- stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops))
stop_search_1 <- read_csv(file = here("data","stop_and_search.csv"))
stop_search_1
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops))
stop_search_1 <-
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops)) %>%
mutate(population = as.double(population))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops)) %>%
mutate(population = as.double(population))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops)) %>%
mutate(population = as.double(population))
stop_search_1 <- read_csv(file = here("data","stop_and_search.csv"))
stop_search_1
stop_search_1 <-
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" ))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" ))
stop_search_1 <-
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" ))
stop_search_1
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")
stop_search_1 %>%
rename(stops = "Number of stop and searches")
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" ))
stop_search_1 <- read_csv(file = here("data","stop_and_search.csv"))
stop_search_1
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" ))
stop_search_1 %>%
rename(stops = "Number of stop and searches") %>%
rename(year = Time) %>%
rename(population = "Population by ethnicity") %>%
rename(rate = "Rate per 1,000 population by ethnicity")%>%
select(c(year,Ethnicity,Legislation_type,Geography,stops,population,rate)) %>%
filter (Ethnicity  %in%  c ( "All", "Asian", "Black", "White", "Other" )) %>%
mutate(stops = as.double(stops)) %>%
mutate(population = as.double(population)) %>%
mutate(rate = as.double(rate))
df21
historic_co2
d1 %>%
separate(year,sep = "/",into = c("Year","else")) %>%
select(c("Year", "legislation_type","stops")) %>%
group_by(Year) %>%
select(c("Year", "legislation_type","stops")) %>%
filter(legislation_type == "All") %>%
summarise(Stops = sum(stops))
d1 %>%
separate(year,sep = "/",into = c("Year","else")) %>%
select(c("Year", "legislation_type","stops"))
d1 %>%
separate(year,sep = "/",into = c("Year","else")) %>%
select(c("Year", "legislation_type","stops"))
df21
df21 %>%      #save the tibble with the name historic_co2
select(c(1,2))%>%           #select the columns 1 and 2
rename(yrbp = 1) %>%
rename(co2 = 2)
nasa_co2
nasa_co2 %>%                            #save the tibble with the name nasa_co2_new
mutate(date = format(date, format = "%Y"))
d1 <- read_csv(file = here("data_cleaned","stop_search_2.csv"))
q3 <- d1 %>%
select(c(ethnicity, stops, year, geography)) %>%
filter(geography =="All - including BTP") %>%
#select(c(ethnicity, legislation_type,rate, stops, geography, year)) %>%
mutate(year = substr(year, 1, 4))%>%
group_by(ethnicity)
p <- ggplot(q3, mapping = aes(x = factor(year), y = stops))
p + geom_point(mapping = aes(colour = ethnicity)) #+ geom_line(mapping = aes(group = ethnicity))
library("janitor")
library("here")
library("tidyverse")
library("lubridate")
library("ggrepel")
library("gapminder")
library("RColorBrewer")
library("readxl")
read_lines(file = here("data","nasa_global_temperature.txt"), n_max = 8L )       #read the first 8 lines of txt
df <- read_table(here("data","nasa_global_temperature.txt"), skip = 3,)          #import data and skip the first 3 lines
df
nasa_temp <- df%>%                                     #save the name of the tibble
select(c("Year", "No_Smoothing")) %>%                #select the two columns
rename(date = Year) %>%                              #rename year as date
rename(temp = No_Smoothing)%>%                       #rename No_smoothing as temp
mutate(date = parse_date(date, format = "%Y")) %>%   #create a new column, turn "date" into date and shows only the year
remove_empty()                                       #remove columns and rows that has NAs
ggplot() +                                             #create a plot
layer (
data = nasa_temp,                                  #use the data from nasa_temp
geom = "line",                                     #the type of plot is line graph
mapping = aes(x = date, y = temp),                 #specifies the data that we use in each axis
stat = "identity",                                 #no further transformation
position = "identity"                              #position adjustment
)
read_lines(file = here("data","nasa_global_temperature.txt"), n_max = 8L )       #read the first 8 lines of txt
df <- read_table(here("data","nasa_global_temperature.txt"), skip = 3,)          #import data and skip the first 3 lines
df
nasa_temp <- df%>%                                     #save the name of the tibble
select(c("Year", "No_Smoothing")) %>%                #select the two columns
rename(date = Year) %>%                              #rename year as date
rename(temp = No_Smoothing)%>%                       #rename No_smoothing as temp
mutate(date = parse_date(date, format = "%Y")) %>%   #create a new column, turn "date" into date and shows only the year
remove_empty()                                       #remove columns and rows that has NAs
ggplot() +                                             #create a plot
layer (
data = nasa_temp,                                  #use the data from nasa_temp
geom = "line",                                     #the type of plot is line graph
mapping = aes(x = date, y = temp),                 #specifies the data that we use in each axis
stat = "identity",                                 #no further transformation
position = "identity"                              #position adjustment
)
install.packages("RColorBrewer")
install.packages("readxl")
install.packages("xlsx")
library("janitor")
library("here")
library("tidyverse")
library("lubridate")
library("ggrepel")
library("gapminder")
library("RColorBrewer")
library("readxl")
read_lines(file = here("data","nasa_global_temperature.txt"), n_max = 8L )       #read the first 8 lines of txt
df <- read_table(here("data","nasa_global_temperature.txt"), skip = 3,)          #import data and skip the first 3 lines
df
nasa_temp <- df%>%                                     #save the name of the tibble
select(c("Year", "No_Smoothing")) %>%                #select the two columns
rename(date = Year) %>%                              #rename year as date
rename(temp = No_Smoothing)%>%                       #rename No_smoothing as temp
mutate(date = parse_date(date, format = "%Y")) %>%   #create a new column, turn "date" into date and shows only the year
remove_empty()
ggplot() +                                             #create a plot
layer (
data = nasa_temp,                                  #use the data from nasa_temp
geom = "line",                                     #the type of plot is line graph
mapping = aes(x = date, y = temp),                 #specifies the data that we use in each axis
stat = "identity",                                 #no further transformation
position = "identity"                              #position adjustment
)
df <- read_table(here("data","nasa_global_temperature.txt"), skip = 3,)          #import data and skip the first 3 lines
df
nasa_temp <- df%>%                                     #save the name of the tibble
select(c("Year", "No_Smoothing")) %>%                #select the two columns
rename(date = Year) %>%                              #rename year as date
rename(temp = No_Smoothing)%>%                       #rename No_smoothing as temp
mutate(date = parse_date(date, format = "%Y")) %>%   #create a new column, turn "date" into date and shows only the year
remove_empty()                                       #remove columns and rows that has NAs
ggplot() +                                             #create a plot
layer (
data = nasa_temp,                                  #use the data from nasa_temp
geom = "line",                                     #the type of plot is line graph
mapping = aes(x = date, y = temp),                 #specifies the data that we use in each axis
stat = "identity",                                 #no further transformation
position = "identity"                              #position adjustment
)
library("janitor")
library("here")
library("tidyverse")
library("lubridate")
library("ggrepel")
library("gapminder")
library("RColorBrewer")
library("readxl")
read_lines(file = here("data","nasa_global_temperature.txt"), n_max = 8L )       #read the first 8 lines of txt
df <- read_table(here("data","nasa_global_temperature.txt"), skip = 3,)          #import data and skip the first 3 lines
df
nasa_temp <- df%>%                                     #save the name of the tibble
select(c("Year", "No_Smoothing")) %>%                #select the two columns
rename(date = Year) %>%                              #rename year as date
rename(temp = No_Smoothing)%>%                       #rename No_smoothing as temp
mutate(date = parse_date(date, format = "%Y")) %>%   #create a new column, turn "date" into date and shows only the year
remove_empty()                                       #remove columns and rows that has NAs
ggplot() +                                             #create a plot
layer (
data = nasa_temp,                                  #use the data from nasa_temp
geom = "line",                                     #the type of plot is line graph
mapping = aes(x = date, y = temp),                 #specifies the data that we use in each axis
stat = "identity",                                 #no further transformation
position = "identity"                              #position adjustment
)
read_lines(file = here("data","nasa_global_temperature.txt"), n_max = 8L )       #read the first 8 lines of txt
df <- read_table(here("data","nasa_global_temperature.txt"), skip = 3,)          #import data and skip the first 3 lines
df
nasa_temp <- df%>%                                     #save the name of the tibble
select(c("Year", "No_Smoothing")) %>%                #select the two columns
rename(date = Year) %>%                              #rename year as date
rename(temp = No_Smoothing)%>%                       #rename No_smoothing as temp
mutate(date = parse_date(date, format = "%Y")) %>%   #create a new column, turn "date" into date and shows only the year
remove_empty()                                       #remove columns and rows that has NAs
ggplot() +                                             #create a plot
layer (
data = nasa_temp,                                  #use the data from nasa_temp
geom = "line",                                     #the type of plot is line graph
mapping = aes(x = date, y = temp),                 #specifies the data that we use in each axis
stat = "identity",                                 #no further transformation
position = "identity"                              #position adjustment
)
